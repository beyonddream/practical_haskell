imports
{
import Chapter14.Simple
import Data.List
import Data.String
import qualified Text.Blaze.Html5 as H
import qualified Text.Blaze.Html5.Attributes as A
}

data Offer a
    | Present present :: {a}
    | PercentDiscount discount :: Float
    | AbsoluteDiscount discount :: Float
    | Restrict products :: {[a]} inner :: (Offer {a})
    | From from :: Int inner :: (Offer {a})
    | Until until :: Int inner :: (Offer {a})
    | Extend times :: Int inner :: (Offer {a})
    | Both left :: (Offer {a}) right :: (Offer {a})
    | BetterOf left :: (Offer {a}) right :: (Offer {a})
    | If cond :: (Root {a}) then :: (Offer {a}) else :: (Offer {a})

data HtmlRoot a
    | HtmlRoot root :: (Offer {a})

deriving Offer : Show

deriving HtmlRoot Offer : Show

attr HtmlRoot Offer
    syn html :: {H.Html}

attr Offer
    chn counter :: Int
    syn title :: String
    syn subtitles :: {[(String, Int)]}
    syn presents use {++} {[]} :: {[a]}
    syn maxDuration use {min} {0} :: Int

imports
{
import Control.Applicative
}

sem Eq {a}, Show {a} => Offer
    | Present PercentDiscount AbsoluteDiscount
        lhs.counter = @lhs.counter + 1

sem Eq {a}, Show {a} => HtmlRoot
    | HtmlRoot root.title = H.toHtml $ @lhs.title


